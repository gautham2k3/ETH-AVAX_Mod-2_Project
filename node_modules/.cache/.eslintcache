[{"C:\\Users\\BommaliGauthamnaidu\\Downloads\\Module2_Chapter4\\src\\index.js":"1","C:\\Users\\BommaliGauthamnaidu\\Downloads\\Module2_Chapter4\\src\\reportWebVitals.js":"2","C:\\Users\\BommaliGauthamnaidu\\Downloads\\Module2_Chapter4\\src\\App.js":"3","C:\\Users\\BommaliGauthamnaidu\\Downloads\\Module2_Chapter4\\src\\BankApp.js":"4"},{"size":517,"mtime":1690108798580,"results":"5","hashOfConfig":"6"},{"size":375,"mtime":1690108798580,"results":"7","hashOfConfig":"6"},{"size":208,"mtime":1690108798577,"results":"8","hashOfConfig":"6"},{"size":4931,"mtime":1690209479891,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"496ygu",{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"C:\\Users\\BommaliGauthamnaidu\\Downloads\\Module2_Chapter4\\src\\index.js",[],"C:\\Users\\BommaliGauthamnaidu\\Downloads\\Module2_Chapter4\\src\\reportWebVitals.js",[],"C:\\Users\\BommaliGauthamnaidu\\Downloads\\Module2_Chapter4\\src\\App.js",["20"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport BankApp from './BankApp';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <BankApp/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\BommaliGauthamnaidu\\Downloads\\Module2_Chapter4\\src\\BankApp.js",["21","22","23","24","25","26","27"],"import React, { useState, useEffect } from 'react';\r\nimport { ethers } from 'ethers';\r\nimport styles from './Bank.module.css';\r\nimport simple_token_abi from './Contracts/bank_app_abi.json';\r\n\r\nconst BankApp = () => {\r\n \r\n let contractAddress = '0x5FbDB2315678afecb367f032d93F642f64180aa3';\r\n\r\n const [errorMessage, setErrorMessage] = useState(null);\r\n const [defaultAccount, setDefaultAccount] = useState(null);\r\n const [connButtonText, setConnButtonText] = useState('Connect Wallet');\r\n\r\n const [provider, setProvider] = useState(null);\r\n const [signer, setSigner] = useState(null);\r\n const [contract, setContract] = useState(null);\r\n\r\n const [transferHash, setTransferHash] = useState(null);\r\n const [checkAcc, setCheckAcc] = useState(\"false\");\r\n const [accStatus, setAccStatus]= useState(\"\");\r\n const [accbalance, setAccBalance]= useState(\"\");\r\n\r\n const connectWalletHandler = () => {\r\n   if (window.ethereum && window.ethereum.isMetaMask) {\r\n\r\n     window.ethereum.request({ method: 'eth_requestAccounts'})\r\n     .then(result => {\r\n       accountChangedHandler(result[0]);\r\n       setConnButtonText('Wallet Connected');\r\n     })\r\n     .catch(error => {\r\n       setErrorMessage(error.message);\r\n     \r\n     });\r\n\r\n   } else {\r\n     console.log('Need to install MetaMask');\r\n     setErrorMessage('Please install MetaMask browser extension');\r\n   }\r\n }\r\n\r\n\r\n const accountChangedHandler = (newAccount) => {\r\n   setDefaultAccount(newAccount);\r\n   updateEthers();\r\n }\r\n const chainChangedHandler = () => {\r\n   \r\n   window.location.reload();\r\n }\r\n\r\n window.ethereum.on('accountsChanged', accountChangedHandler);\r\n\r\n window.ethereum.on('chainChanged', chainChangedHandler);\r\n\r\n const updateEthers = () => {\r\n   let tempProvider = new ethers.providers.Web3Provider(window.ethereum);\r\n   setProvider(tempProvider);\r\n\r\n   let tempSigner = tempProvider.getSigner();\r\n   setSigner(tempSigner);\r\n\r\n   let tempContract = new ethers.Contract(contractAddress, simple_token_abi, tempSigner);\r\n   setContract(tempContract);\t\r\n }\r\n\r\n const createAccount = async()=>{\r\n   let txt = await contract.createAcc();\r\n   console.log(txt);\r\n   setAccStatus(\"Your Account is created\");\r\n }\r\n const checkAccountExists = async()=>{\r\n   let txt = await contract.accountExists();\r\n   if(txt==true){\r\n   setCheckAcc(\"true\");\r\n   }\r\n }\r\n const AccountBalance = async()=>{\r\n   let txt= await contract.accountBalance();\r\n   let balanceNumber = txt.toNumber();\r\n   console.log(balanceNumber)\r\n   setAccBalance(''+balanceNumber);\r\n }\r\n const DepositBalance = async(e)=>{\r\n   e.preventDefault();\r\n   let depositAmount = e.target.depositAmount.value;\r\n   let txt= await contract.deposit({\r\n     value: depositAmount \r\n   });\r\n }\r\n\r\n const WithdrawBalance = async(e)=>{\r\n   e.preventDefault();\r\n   let withdrawAmount = e.target.withdrawAmount.value;\r\n   let txt= await contract.withdraw(withdrawAmount);\r\n   console.log(txt);\r\n }\r\n\r\n\r\n return (\r\n  <div className={styles.container}>\r\n    <header className={styles.header}>\r\n      <h1 className={styles.title}>Bank Dapp</h1>\r\n      <button className={styles.connectButton} onClick={connectWalletHandler}>\r\n        {connButtonText}\r\n      </button>\r\n    </header>\r\n\r\n    <section className={styles.section}>\r\n      <h2>Account Info</h2>\r\n      <div className={styles.walletCard}>\r\n        <p>Address: {defaultAccount}</p>\r\n        <button className={styles.balanceButton} onClick={AccountBalance}>\r\n          Check Balance\r\n        </button>\r\n        <p>Balance: {accbalance} </p>\r\n        {errorMessage && <div className={styles.error}>{errorMessage}</div>}\r\n        {accStatus && <div className={styles.success}>{accStatus}</div>}\r\n      </div>\r\n    </section>\r\n\r\n    <section className={styles.section}>\r\n      <h2>Interactions</h2>\r\n      <div className={styles.interactionsCard}>\r\n        <button className={styles.interactionButton} onClick={createAccount}>\r\n          Create Account\r\n        </button>\r\n        <button className={styles.interactionButton} onClick={checkAccountExists}>\r\n          Check Account\r\n        </button>\r\n        <p>Status: {checkAcc}</p>\r\n      </div>\r\n    </section>\r\n\r\n    <section className={styles.section}>\r\n      <h2>Deposit & Withdraw</h2>\r\n      <div className={styles.interactionsCard}>\r\n        <form onSubmit={DepositBalance}>\r\n          <label htmlFor=\"depositAmount\">Deposit Amount:</label>\r\n          <input type=\"number\" id=\"depositAmount\" min=\"0\" step=\"1\" />\r\n          <button type=\"submit\" className={styles.actionButton}>\r\n            Deposit\r\n          </button>\r\n        </form>\r\n\r\n        <form onSubmit={WithdrawBalance}>\r\n          <label htmlFor=\"withdrawAmount\">Withdraw Amount:</label>\r\n          <input type=\"number\" id=\"withdrawAmount\" min=\"0\" step=\"1\" />\r\n          <button type=\"submit\" className={styles.actionButton}>\r\n            Withdraw\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </section>\r\n  </div>\r\n);\r\n};\r\n\r\nexport default BankApp;\r\n",{"ruleId":"28","severity":1,"message":"29","line":1,"column":8,"nodeType":"30","messageId":"31","endLine":1,"endColumn":12},{"ruleId":"28","severity":1,"message":"32","line":1,"column":27,"nodeType":"30","messageId":"31","endLine":1,"endColumn":36},{"ruleId":"28","severity":1,"message":"33","line":14,"column":9,"nodeType":"30","messageId":"31","endLine":14,"endColumn":17},{"ruleId":"28","severity":1,"message":"34","line":15,"column":9,"nodeType":"30","messageId":"31","endLine":15,"endColumn":15},{"ruleId":"28","severity":1,"message":"35","line":18,"column":9,"nodeType":"30","messageId":"31","endLine":18,"endColumn":21},{"ruleId":"28","severity":1,"message":"36","line":18,"column":23,"nodeType":"30","messageId":"31","endLine":18,"endColumn":38},{"ruleId":"37","severity":1,"message":"38","line":74,"column":10,"nodeType":"39","messageId":"40","endLine":74,"endColumn":12},{"ruleId":"28","severity":1,"message":"41","line":87,"column":8,"nodeType":"30","messageId":"31","endLine":87,"endColumn":11},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'provider' is assigned a value but never used.","'signer' is assigned a value but never used.","'transferHash' is assigned a value but never used.","'setTransferHash' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'txt' is assigned a value but never used."]